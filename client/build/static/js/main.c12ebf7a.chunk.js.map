{"version":3,"sources":["context/app.context.js","auth.hook.js","components/LoginPage.js","components/CommonComponents/PrivateRoute.js","components/CommonComponents/AlertTemplate.js","components/CommonComponents/Alerts.js","components/NavBar.js","components/BookCard.js","api/api.js","components/Dashboard.js","components/CommonComponents/Modal.js","dateFormatterUtil.js","components/BookPage.js","App.js","index.js"],"names":["AppContext","createContext","isAuthenticated","username","login","noop","logout","message","storageName","LoginPage","useContext","useState","password","form","setForm","changeHandler","event","target","name","value","to","className","onSubmit","e","preventDefault","axios","post","then","res","data","token","catch","err","response","TextField","id","label","type","autoComplete","variant","onChange","Button","color","PrivateRoute","Component","component","rest","render","props","Alert","elevation","useStyles","makeStyles","theme","root","cursor","width","marginTop","spacing","AlertTemplate","options","close","classes","Snackbar","open","autoHideDuration","onClose","anchorOrigin","vertical","horizontal","severity","Alerts","prevProps","this","alert","success","error","withAlert","flexGrow","menuButton","marginRight","title","NavBar","appContext","AppBar","position","Toolbar","onClick","BookCard","history","useHistory","push","pathname","_id","state","bookData","mode","deleteBook","bookName","authorBook","stock","axiosRetry","retries","editBook","obj","Promise","resolve","reject","put","getConfig","delete","JSON","parse","localStorage","getItem","config","headers","formControl","margin","minWidth","selectEmpty","defaultData","publishDate","Date","readerName","returnDate","Dashboard","books","setBooks","deleteTrigger","setDeleteTrigger","React","sortValue","setSortValue","useEffect","Authorization","get","status","getBooks","errStatus","handleDeleteBookBtn","FormControl","InputLabel","Select","labelId","MenuItem","length","map","book","modal","display","alignItems","justifyContent","paper","backgroundColor","palette","background","border","boxShadow","shadows","padding","AddClientDetailModal","Modal","aria-labelledby","aria-describedby","show","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","timeout","Fade","in","edit","htmlFor","required","utils","DateFnsUtils","format","date","KeyboardButtonProps","dateFormatter","date_string","weekday","year","month","day","tempDate","toLocaleString","split","reverse","join","BookPage","location","useLocation","modalShow","setModalShow","stateMode","setStateMode","bookState","setBookState","disabled","console","log","editData","App","setToken","setUsername","useCallback","jwtToken","setItem","stringify","removeItem","useAuth","setAuthenticated","alertState","setAlertState","Provider","template","exact","path","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c12ebf7a.chunk.js","sourcesContent":["import { createContext } from \"react\";\n\nfunction noop() {} //plug function\n\nexport const AppContext = createContext({\n   isAuthenticated: false,\n   username: \"\",\n   login: noop(),\n   logout: noop(),\n   message: noop(),\n});\n","import { useState, useCallback, useEffect } from \"react\";\n\nconst storageName = \"userStorage\";\n\nexport const useAuth = () => {\n   const [token, setToken] = useState(\"\");\n   const [username, setUsername] = useState(\"\");\n\n   const login = useCallback((username, jwtToken) => {\n      setToken(jwtToken);\n      setUsername(username);\n\n      localStorage.setItem(\n         storageName,\n         JSON.stringify({ username: username, token: jwtToken })\n      );\n   }, []);\n\n   const logout = useCallback(() => {\n      setToken(null);\n      setUsername(null);\n\n      localStorage.removeItem(storageName);\n   }, []);\n\n   useEffect(() => {\n      const data = JSON.parse(localStorage.getItem(storageName));\n      if (data && data.token) {\n         login(data.username, data.token);\n      }\n   }, [login]);\n   return { username, token, login, logout };\n};\n","import React, { useState, useContext } from \"react\";\nimport axios from \"axios\";\nimport { Redirect } from \"react-router-dom\";\n\nimport { TextField, Button } from \"@material-ui/core\";\n\nimport { AppContext } from \"../context/app.context\";\n\nfunction LoginPage() {\n   const { login, message, isAuthenticated } = useContext(AppContext);\n   const [form, setForm] = useState({ username: \"\", password: \"\" });\n\n   const changeHandler = (event) => {\n      setForm({ ...form, [event.target.name]: event.target.value });\n   };\n\n   const loginHandler = (e) => {\n      e.preventDefault();\n\n      const headers = { \"Content-Type\": \"application/json\" };\n      axios\n         .post(\"/api/auth/login\", { ...form }, headers)\n         .then((res) => {\n            login(res.data.username, res.data.token);\n         })\n         .catch((err) => message(\"error\", err.response.data.message));\n   };\n\n   if (isAuthenticated) {\n      return <Redirect to=\"/dashboard\" />;\n   }\n\n   return (\n      <div className=\"login-form-container\">\n         <h1 className=\"login-form-title\">Login</h1>\n         <form onSubmit={loginHandler}>\n            <TextField\n               id=\"outlined-username-input\"\n               name=\"username\"\n               label=\"Username\"\n               type=\"text\"\n               autoComplete=\"current-username\"\n               variant=\"outlined\"\n               value={form.username}\n               onChange={changeHandler}\n            />\n            <TextField\n               id=\"outlined-password-input\"\n               name=\"password\"\n               label=\"Password\"\n               type=\"password\"\n               autoComplete=\"current-password\"\n               variant=\"outlined\"\n               value={form.password}\n               onChange={changeHandler}\n            />\n            <Button color=\"inherit\" type=\"submit\">\n               Login\n            </Button>\n         </form>\n      </div>\n   );\n}\n\nexport default LoginPage;\n","import React, { Fragment } from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\n\nconst PrivateRoute = ({ component: Component, isAuthenticated, ...rest }) => (\n   <Route\n      {...rest}\n      render={(props) => {\n         if (isAuthenticated) {\n            return (\n               <Fragment>\n                  <Component {...props} />\n               </Fragment>\n            );\n         } else {\n            return <Redirect to=\"/login\" />;\n         }\n      }}\n   />\n);\n\nexport default PrivateRoute;\n","import React from \"react\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport MuiAlert from \"@material-ui/lab/Alert\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nfunction Alert(props) {\n   return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nconst useStyles = makeStyles((theme) => ({\n   root: {\n      cursor: \"pointer\",\n      width: \"100%\",\n      \"& > * + *\": {\n         marginTop: theme.spacing(2),\n      },\n   },\n}));\n\nexport default function AlertTemplate({ options, message, close }) {\n   const classes = useStyles();\n   return (\n      <div className={classes.root}>\n         <Snackbar\n            open={true}\n            autoHideDuration={6000}\n            onClose={close}\n            anchorOrigin={{\n               vertical: \"bottom\",\n               horizontal: \"right\",\n            }}\n         >\n            <Alert onClose={() => close()} severity={options.type}>\n               {message}\n            </Alert>\n         </Snackbar>\n      </div>\n   );\n}\n","import React, { Component, Fragment } from \"react\";\nimport { withAlert } from \"react-alert\";\n\nexport class Alerts extends Component {\n   componentDidUpdate(prevProps) {\n      const { type, alert, message } = this.props;\n      if (type === \"success\") {\n         alert.success(message);\n      } else if (type === \"error\") {\n         alert.error(message);\n      }\n   }\n\n   render() {\n      return <Fragment />;\n   }\n}\n\nexport default withAlert()(Alerts);\n","import React, { useContext } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Button from \"@material-ui/core/Button\";\n\nimport { AppContext } from \"../context/app.context\";\n\nconst useStyles = makeStyles((theme) => ({\n   root: {\n      flexGrow: 1,\n   },\n   menuButton: {\n      marginRight: theme.spacing(2),\n   },\n   title: {\n      flexGrow: 1,\n   },\n}));\n\nexport default function NavBar() {\n   const classes = useStyles();\n   const appContext = useContext(AppContext);\n   const logoutHandler = () => {\n      appContext.logout();\n   };\n   return (\n      <div className={classes.root}>\n         <AppBar position=\"static\">\n            <Toolbar>\n               <Link to=\"/dashboard\" className={classes.title}>\n                  Library Manager\n               </Link>\n               {appContext.isAuthenticated ? (\n                  <div className=\"navbar-auth-block\">\n                     <p>{appContext.username}</p>\n                     <Button color=\"inherit\" onClick={logoutHandler}>\n                        Logout\n                     </Button>\n                  </div>\n               ) : (\n                  \"\"\n               )}\n            </Toolbar>\n         </AppBar>\n      </div>\n   );\n}\n","import React from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { Button } from \"@material-ui/core\";\n\nfunction BookCard(props) {\n   const history = useHistory();\n\n   const handleViewClick = (event) => {\n      event.preventDefault();\n      history.push({\n         pathname: `/dashboard/${props.data._id}`,\n         state: { bookData: props.data, mode: \"view\" },\n      });\n   };\n\n   const handleEditClick = (event) => {\n      event.preventDefault();\n      history.push({\n         pathname: `/dashboard/${props.data._id}`,\n         state: { bookData: props.data, mode: \"edit\" },\n      });\n   };\n\n   const handleDeleteClick = (event) => {\n      event.preventDefault();\n      props.deleteBook(props.data._id);\n   };\n\n   return (\n      <div className=\"books-bookCard-block\">\n         <div className=\"books-bookCard-actions\">\n            <Button\n               variant=\"outlined\"\n               color=\"primary\"\n               onClick={handleViewClick}\n            >\n               View\n            </Button>\n            <Button\n               variant=\"outlined\"\n               color=\"primary\"\n               onClick={handleEditClick}\n            >\n               Edit\n            </Button>\n            <Button\n               variant=\"outlined\"\n               color=\"primary\"\n               onClick={handleDeleteClick}\n            >\n               Delete\n            </Button>\n         </div>\n         <div className=\"books-bookCard-info\">\n            <p className=\"bookName\">{props.data.bookName}</p>\n            <p className=\"authorBook\">{props.data.authorBook}</p>\n            <p className=\"stock\">\n               {props.data.stock ? \"In library\" : \"At the reader\"}\n            </p>\n         </div>\n      </div>\n   );\n}\n\nexport default BookCard;\n","import axios from \"axios\";\nimport axiosRetry from \"axios-retry\";\n\naxiosRetry(axios, { retries: 3 });\n\n// get Books query\nexport const getBooks = (token, sortValue) =>\n   new Promise((resolve, reject) => {\n      const config = {\n         headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${token}`,\n         },\n      };\n\n      axios\n         .get(`/api/books/?sort=${sortValue}`, config)\n         .then((res) => resolve(res.data))\n         .catch((err) => {\n            reject(err.response.status);\n         });\n   });\n\n// create Book query\nexport const createBook = (obj) =>\n   new Promise((resolve, reject) => {\n      axios\n         .post(\"/api/books/create\", obj, getConfig())\n         .then((res) => resolve(res.data))\n         .catch((err) => {\n            reject(err.response.data.message);\n         });\n   });\n\n// edit Book query\nexport const editBook = (obj) =>\n   new Promise((resolve, reject) => {\n      axios\n         .put(`/api/books/edit/${obj._id}`, obj, getConfig())\n         .then((res) => {\n            resolve(res.data);\n         })\n         .catch((err) => {\n            reject(err.response.data.message);\n         });\n   });\n\n// delete Book query\nexport const deleteBook = (id) =>\n   new Promise((resolve, reject) => {\n      axios\n         .delete(`/api/books/delete/${id}`, getConfig())\n         .then((res) => resolve(res.data.message))\n         .catch((err) => {\n            reject(err.response.data.message);\n         });\n   });\n\n// Setup config with token - helper func\nconst getConfig = () => {\n   // Get token from state\n   const token = JSON.parse(localStorage.getItem(\"userStorage\")).token;\n   // Headers\n   const config = {\n      headers: {\n         \"Content-Type\": \"application/json\",\n      },\n   };\n\n   // If token, add to headers config\n   if (token) {\n      config.headers[\"Authorization\"] = `Bearer ${token}`;\n   }\n\n   return config;\n};\n","import React, { useState, useEffect, useContext } from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\nimport Button from \"@material-ui/core/Button\";\n\nimport BookCard from \"./BookCard\";\n\nimport { AppContext } from \"../context/app.context\";\nimport { getBooks, deleteBook } from \"../api/api\";\n\nconst useStyles = makeStyles((theme) => ({\n   formControl: {\n      margin: theme.spacing(1),\n      minWidth: 120,\n   },\n   selectEmpty: {\n      marginTop: theme.spacing(2),\n   },\n}));\n\nconst defaultData = {\n   bookName: \"\",\n   authorBook: \"\",\n   publishDate: new Date(),\n   stock: true,\n   readerName: \"\",\n   returnDate: new Date(),\n};\n\nfunction Dashboard() {\n   const [books, setBooks] = useState([]);\n   const [deleteTrigger, setDeleteTrigger] = useState(false);\n   const [sortValue, setSortValue] = React.useState(\"default\");\n\n   // auth context\n   const { token, logout, message } = useContext(AppContext);\n   const classes = useStyles();\n   const history = useHistory();\n\n   useEffect(() => {\n      if (token) {\n         getBooks(token, sortValue)\n            .then((res) => {\n               setBooks(res);\n            })\n            .catch((errStatus) => {\n               if (errStatus === 401) logout();\n            });\n      }\n   }, [token, sortValue, deleteTrigger, logout]);\n\n   const handleChangeSort = (event) => {\n      setSortValue(event.target.value);\n   };\n   const handleCreateBtn = (event) => {\n      event.preventDefault();\n      history.push({\n         pathname: \"/dashboard/create\",\n         state: { bookData: defaultData, mode: \"create\" },\n      });\n   };\n   const handleDeleteBookBtn = (id) => {\n      deleteBook(id)\n         .then((res) => {\n            message(\"success\", res);\n            setDeleteTrigger(!deleteTrigger);\n         })\n         .catch((err) => {\n            message(\"error\", err);\n         });\n   };\n\n   return (\n      <div className=\"page-container\">\n         <h1 className=\"title-page-block\">Books</h1>\n         <div className=\"books-main-menu\">\n            <div className=\"books-sort-menu\">\n               <FormControl variant=\"outlined\" className={classes.formControl}>\n                  <InputLabel id=\"demo-simple-select-outlined-label\">\n                     Sort by\n                  </InputLabel>\n                  <Select\n                     labelId=\"demo-simple-select-outlined-label\"\n                     id=\"demo-simple-select-outlined\"\n                     value={sortValue}\n                     onChange={handleChangeSort}\n                     label=\"Sort\"\n                  >\n                     <MenuItem value={\"default\"}>Default</MenuItem>\n                     <MenuItem value={\"stock\"}>In stock</MenuItem>\n                     <MenuItem value={\"expired\"}>Expired</MenuItem>\n                  </Select>\n               </FormControl>\n            </div>\n            <Button\n               variant=\"contained\"\n               color=\"primary\"\n               onClick={handleCreateBtn}\n            >\n               Create book entry\n            </Button>\n         </div>\n         <div className=\"books-list-block\">\n            {books.length === 0 ? (\n               <p>No data ...</p>\n            ) : (\n               books.map((book) => (\n                  <BookCard\n                     key={book._id}\n                     data={book}\n                     deleteBook={handleDeleteBookBtn}\n                  />\n               ))\n            )}\n         </div>\n      </div>\n   );\n}\n\nexport default Dashboard;\n","import \"date-fns\";\nimport React, { useState } from \"react\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Modal from \"@material-ui/core/Modal\";\nimport Backdrop from \"@material-ui/core/Backdrop\";\nimport Fade from \"@material-ui/core/Fade\";\nimport { TextField, Button } from \"@material-ui/core\";\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport {\n   MuiPickersUtilsProvider,\n   KeyboardDatePicker,\n} from \"@material-ui/pickers\";\n\nconst useStyles = makeStyles((theme) => ({\n   modal: {\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n   },\n   paper: {\n      backgroundColor: theme.palette.background.paper,\n      border: \"2px solid #000\",\n      boxShadow: theme.shadows[5],\n      padding: theme.spacing(2, 4, 3),\n   },\n}));\n\nexport default function AddClientDetailModal(props) {\n   const classes = useStyles();\n   const [form, setForm] = useState({ readerName: \"\", returnDate: new Date() });\n\n   const changeHandler = (event) => {\n      setForm({ ...form, readerName: event.target.value });\n   };\n   const changeDateHandler = (date) => {\n      setForm({ ...form, returnDate: date });\n   };\n\n   const handleSubmit = (event) => {\n      event.preventDefault();\n      props.edit({ ...props.bookData, ...form, stock: false });\n   };\n   const handleCancelBtn = (event) => {\n      event.preventDefault();\n      setForm({ readerName: \"\", returnDate: new Date() });\n      props.close();\n   };\n\n   return (\n      <div className=\"modal-container\">\n         <Modal\n            aria-labelledby=\"transition-modal-title\"\n            aria-describedby=\"transition-modal-description\"\n            className={classes.modal}\n            open={props.show}\n            onClose={props.close}\n            closeAfterTransition\n            BackdropComponent={Backdrop}\n            BackdropProps={{\n               timeout: 500,\n            }}\n         >\n            <Fade in={props.show}>\n               <div className={classes.paper}>\n                  <h2 className=\"title-modal-block\">Details about client</h2>\n                  <form onSubmit={handleSubmit} className=\"modal-form\">\n                     <div className=\"form-data\">\n                        <div className=\"form-label\">\n                           <label\n                              className=\"form-label-item\"\n                              htmlFor=\"readerName\"\n                           >\n                              Reader Name:{\" \"}\n                           </label>\n                           <label\n                              className=\"form-label-item\"\n                              htmlFor=\"returnDate\"\n                           >\n                              Return Date:{\" \"}\n                           </label>\n                        </div>\n                        <div className=\"form-input\">\n                           <TextField\n                              className=\"form-input-item\"\n                              required\n                              id=\"standard-required\"\n                              name=\"readerName\"\n                              label=\"Required\"\n                              type=\"text\"\n                              value={form.readerName}\n                              onChange={changeHandler}\n                              variant=\"outlined\"\n                           />\n                           <MuiPickersUtilsProvider\n                              className=\"form-input-item\"\n                              utils={DateFnsUtils}\n                           >\n                              <KeyboardDatePicker\n                                 margin=\"normal\"\n                                 id=\"date-picker-dialog\"\n                                 label=\"Publish date\"\n                                 format=\"MM/dd/yyyy\"\n                                 value={form.returnDate}\n                                 onChange={changeDateHandler}\n                                 KeyboardButtonProps={{\n                                    \"aria-label\": \"change date\",\n                                 }}\n                              />\n                           </MuiPickersUtilsProvider>\n                        </div>\n                     </div>\n                     <div className=\"form-buttons\">\n                        <Button color=\"inherit\" type=\"submit\">\n                           Save\n                        </Button>\n                        <Button color=\"inherit\" onClick={handleCancelBtn}>\n                           Cancel\n                        </Button>\n                     </div>\n                  </form>\n               </div>\n            </Fade>\n         </Modal>\n      </div>\n   );\n}\n","export const dateFormatter = (date_string) => {\n   var date = new Date(date_string);\n   var options = {\n      weekday: \"long\",\n      year: \"numeric\",\n      month: \"long\",\n      day: \"numeric\",\n   };\n   options.timeZone = \"UTC\";\n   options.timeZoneName = \"short\";\n   let tempDate = date.toLocaleString(\"en-US\", options);\n   tempDate = tempDate.split(\",\");\n   tempDate[1] = tempDate[1].split(\" \").reverse().join(\" \");\n   let string = [tempDate[1], tempDate[2]].join(\"\");\n   return string;\n};\n","import \"date-fns\";\nimport React, { useState, useEffect, useContext } from \"react\";\nimport { useHistory, useLocation } from \"react-router-dom\";\n\nimport { TextField, Button } from \"@material-ui/core\";\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport {\n   MuiPickersUtilsProvider,\n   KeyboardDatePicker,\n} from \"@material-ui/pickers\";\n\nimport Modal from \"./CommonComponents/Modal\";\n\nimport { createBook, editBook, deleteBook } from \"../api/api\";\nimport { AppContext } from \"../context/app.context\";\nimport { dateFormatter } from \"../dateFormatterUtil\";\n\nfunction BookPage() {\n   const history = useHistory();\n   const { message } = useContext(AppContext);\n   const location = useLocation();\n   const [modalShow, setModalShow] = useState(false);\n   const [stateMode, setStateMode] = useState(location.state.mode);\n   const [bookState, setBookState] = useState(location.state.bookData);\n   const [form, setForm] = useState({\n      bookName: \"\",\n      authorBook: \"\",\n      publishDate: new Date(),\n      stock: true,\n      readerName: \"\",\n      returnDate: new Date(),\n   });\n\n   useEffect(() => {\n      setForm(location.state.bookData);\n      setBookState(location.state.bookData);\n      setStateMode(location.state.mode);\n   }, [location.state.bookData, location.state.mode]);\n\n   const changeHandler = (event) => {\n      setForm({ ...form, [event.target.name]: event.target.value });\n   };\n   const changeDateHandler = (date) => {\n      setForm({ ...form, publishDate: date });\n   };\n\n   const handleSubmit = (event) => {\n      event.preventDefault();\n      if (stateMode === \"create\") {\n         createBook(form)\n            .then((res) => {\n               history.push({\n                  pathname: `/dashboard/${res.book._id}`,\n                  state: { bookData: res.book, mode: \"view\" },\n               });\n            })\n            .catch((err) => {\n               message(\"error\", err);\n            });\n      } else {\n         editBook(form)\n            .then((res) => {\n               setBookState(res.book);\n               setStateMode(\"view\");\n            })\n            .catch((err) => {\n               message(\"error\", err);\n            });\n      }\n   };\n\n   const changeBookHandler = (event) => {\n      event.preventDefault();\n      setStateMode(\"edit\");\n   };\n   const deleteBookHandler = (event) => {\n      event.preventDefault();\n      deleteBook(bookState._id)\n         .then((res) => {\n            message(\"success\", res);\n            history.push(\"/dashboard\");\n         })\n         .catch((err) => {\n            message(\"error\", err);\n         });\n   };\n   const resetFormHandler = (event) => {\n      event.preventDefault();\n      setForm(bookState);\n      setStateMode(\"view\");\n   };\n\n   const giveBookHandler = (event) => {\n      event.preventDefault();\n      setModalShow(true);\n      console.log(bookState);\n   };\n   const returnBookHandler = (event) => {\n      event.preventDefault();\n      editBook({\n         ...bookState,\n         stock: true,\n         readerName: \"\",\n         returnDate: new Date(),\n      })\n         .then((res) => {\n            setBookState(res.book);\n         })\n         .catch((err) => {\n            message(\"error\", err);\n         });\n   };\n   const handleEditReaderInfo = (editData) => {\n      console.log(editData);\n      editBook(editData)\n         .then((res) => {\n            setBookState(res.book);\n            setModalShow(false);\n         })\n         .catch((err) => {\n            message(\"error\", err);\n         });\n   };\n   const handleCloseModal = () => {\n      setModalShow(false);\n   };\n\n   return (\n      <div className=\"page-container\">\n         <h1 className=\"title-page-block\">\n            {stateMode === \"create\" ? \"Book Name\" : bookState.bookName}\n         </h1>\n         {stateMode === \"create\" ? (\n            \"\"\n         ) : (\n            <div className=\"bookPage-menu\">\n               <Button\n                  variant=\"outlined\"\n                  color=\"primary\"\n                  onClick={changeBookHandler}\n               >\n                  Edit\n               </Button>\n               <Button\n                  variant=\"outlined\"\n                  color=\"primary\"\n                  onClick={deleteBookHandler}\n               >\n                  Delete\n               </Button>\n            </div>\n         )}\n         <div className=\"bookPage-container\">\n            <form onSubmit={handleSubmit}>\n               <div className=\"form-data\">\n                  <div className=\"form-label\">\n                     <label className=\"form-label-item\" htmlFor=\"bookName\">\n                        Book Name:{\" \"}\n                     </label>\n                     <label className=\"form-label-item\" htmlFor=\"authorName\">\n                        Author Name:{\" \"}\n                     </label>\n                     <label className=\"form-label-item\" htmlFor=\"authorName\">\n                        Publish Date:{\" \"}\n                     </label>\n                  </div>\n                  <div className=\"form-input\">\n                     <TextField\n                        className=\"form-input-item\"\n                        required\n                        disabled={stateMode === \"view\"}\n                        id=\"standard-required\"\n                        name=\"bookName\"\n                        label=\"Required\"\n                        type=\"text\"\n                        value={form.bookName}\n                        onChange={changeHandler}\n                        variant=\"outlined\"\n                     />\n\n                     <TextField\n                        className=\"form-input-item\"\n                        required\n                        disabled={stateMode === \"view\"}\n                        id=\"standard-required\"\n                        name=\"authorBook\"\n                        label=\"Required\"\n                        type=\"text\"\n                        value={form.authorBook}\n                        onChange={changeHandler}\n                        variant=\"outlined\"\n                     />\n                     <MuiPickersUtilsProvider\n                        className=\"form-input-item\"\n                        utils={DateFnsUtils}\n                     >\n                        <KeyboardDatePicker\n                           disabled={stateMode === \"view\"}\n                           margin=\"normal\"\n                           id=\"date-picker-dialog\"\n                           label=\"Publish date\"\n                           format=\"MM/dd/yyyy\"\n                           value={form.publishDate}\n                           onChange={changeDateHandler}\n                           KeyboardButtonProps={{\n                              \"aria-label\": \"change date\",\n                           }}\n                        />\n                     </MuiPickersUtilsProvider>\n                  </div>\n               </div>\n               <div className=\"form-buttons\">\n                  {stateMode === \"view\" ? (\n                     \"\"\n                  ) : (\n                     <Button color=\"inherit\" type=\"submit\">\n                        Save\n                     </Button>\n                  )}\n                  {stateMode === \"edit\" ? (\n                     <Button color=\"primary\" onClick={resetFormHandler}>\n                        Reset\n                     </Button>\n                  ) : (\n                     \"\"\n                  )}\n               </div>\n            </form>\n            {stateMode === \"create\" ? (\n               \"\"\n            ) : (\n               <div className=\"bookPage-reader-block\">\n                  <p className=\"\">Book status information</p>\n                  <div className=\"bookPage-reader-menu\">\n                     <Button\n                        disabled={!bookState.stock}\n                        variant=\"outlined\"\n                        color=\"primary\"\n                        onClick={giveBookHandler}\n                     >\n                        Give to the reader\n                     </Button>\n                     <Button\n                        disabled={bookState.stock}\n                        variant=\"outlined\"\n                        color=\"primary\"\n                        onClick={returnBookHandler}\n                     >\n                        Return a book\n                     </Button>\n                  </div>\n                  <div className=\"bookPage-reader-info\">\n                     {bookState.stock ? (\n                        <p>Book in the library.</p>\n                     ) : (\n                        <div className=\"reader-info\">\n                           <p>Name: {bookState.readerName}</p>\n                           <p>\n                              Return date: {dateFormatter(bookState.returnDate)}\n                           </p>\n                        </div>\n                     )}\n                  </div>\n               </div>\n            )}\n         </div>\n         <Modal\n            show={modalShow}\n            close={handleCloseModal}\n            bookData={bookState}\n            edit={handleEditReaderInfo}\n         />\n      </div>\n   );\n}\n\nexport default BookPage;\n","import React, { useState, useEffect } from \"react\";\nimport { Provider as AlertProvider } from \"react-alert\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\nimport { AppContext } from \"./context/app.context\";\nimport { useAuth } from \"./auth.hook\";\n\nimport LoginPage from \"./components/LoginPage\";\nimport PrivateRoute from \"./components/CommonComponents/PrivateRoute\";\n\nimport AlertTemplate from \"./components/CommonComponents/AlertTemplate\";\nimport Alerts from \"./components/CommonComponents/Alerts\";\nimport NavBar from \"./components/NavBar\";\nimport Dashboard from \"./components/Dashboard\";\nimport BookPage from \"./components/BookPage\";\n\nimport \"./styles.scss\";\n\nfunction App() {\n   const { username, token, login, logout } = useAuth(); // custom hook\n   const [isAuthenticated, setAuthenticated] = useState(!!token);\n   const [alertState, setAlertState] = useState({ type: \"\", message: \"\" });\n\n   const message = (type, message) => {\n      // set state for alert\n      setAlertState({ type, message });\n      // set default state for alert\n      setAlertState({ type: \"\", message: \"\" });\n   };\n\n   useEffect(() => {\n      setAuthenticated(!!token);\n   }, [token]);\n\n   return (\n      <AppContext.Provider\n         value={{ token, isAuthenticated, username, login, logout, message }}\n      >\n         <AlertProvider template={AlertTemplate}>\n            <Router>\n               <NavBar />\n               <Alerts type={alertState.type} message={alertState.message} />\n               <div className=\"page-container\">\n                  <Switch>\n                     <Route exact path=\"/login\" component={LoginPage} />\n                     <PrivateRoute\n                        exact\n                        path=\"/dashboard\"\n                        component={Dashboard}\n                        isAuthenticated={isAuthenticated}\n                     ></PrivateRoute>\n                     <PrivateRoute\n                        exact\n                        path=\"/dashboard/:bookID\"\n                        component={BookPage}\n                        isAuthenticated={isAuthenticated}\n                     ></PrivateRoute>\n                     {/* default route */}\n                     <PrivateRoute\n                        exact\n                        path=\"*\"\n                        component={Dashboard}\n                        isAuthenticated={isAuthenticated}\n                     ></PrivateRoute>\n                  </Switch>\n               </div>\n            </Router>\n         </AlertProvider>\n      </AppContext.Provider>\n   );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n   <React.StrictMode>\n      <App />\n   </React.StrictMode>,\n   document.getElementById(\"root\")\n);\n"],"sourceRoot":""}